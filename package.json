{
  "name": "cncjs4marlin",
  "version": "0.1.0",
  "description": "gCode sender for Marlin based CNC machines",
  "author": {
    "name": "Edward W <CNCjs@webbsense.com>",
    "email": "cncjs4marlin@webbsense.com"
  },
  "main": "./dist/cncjs4marlin/server-cli.js",
  "exports": "./dist/cncjs4marlin/server-cli.js",
  "type": "module",
  "bin": {
    "cnc": "./bin/cnc",
    "cncjs4marlin": "./bin/cncjs4marlin"
  },
  "files": [
    "bin",
    "dist",
    "static"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Domush/cncjs4marlin"
  },
  "license": "MIT",
  "engines": {
    "node": ">=14"
  },
  "preferGlobal": true,
  "scripts": {
    "prepare": "npm run clean && npm run eslint && npm run stylint",
    "prebuild-latest": "npm run package-sync && bash -c \"cd src; npm version ${npm_package_version}-${COMMIT_COUNT:-latest}\" && bash scripts/prebuild-prod.sh",
    "prebuild-dev": "npm run package-sync && bash scripts/prebuild-dev.sh",
    "prebuild-prod": "npm run package-sync && bash scripts/prebuild-prod.sh",
    "build": "npm run build-prod",
    "build-i18n": "concurrently --kill-others-on-fail --names \"build-i18n-server,build-i18n-app\" \"npm run build-i18n-server\" \"npm run build-i18n-app\"",
    "build-i18n-server": "i18next-scanner --config i18next-scanner.config.server.js \"src/server/**/*.{html,js,jsx}\" \"!src/server/i18n/**\" \"!**/node_modules/**\"",
    "build-i18n-app": "i18next-scanner --config i18next-scanner.config.app.js \"src/app/**/*.{html,js,jsx}\" \"!src/app/i18n/**\" \"!**/node_modules/**\"",
    "build-latest": "concurrently --kill-others-on-fail --names \"build-prod-server,build-prod-app\" \"npm run build-prod-server\" \"npm run build-prod-app\"",
    "build-dev": "concurrently --kill-others-on-fail --names \"build-dev-server,build-dev-app\" \"npm run build-dev-server\" \"npm run build-dev-app\"",
    "build-dev-server": "cross-env NODE_ENV=development webpack-cli --progress --config webpack.config.server.development.js && npm run build-i18n-server",
    "build-dev-app": "npm run build-i18n-app",
    "build-prod": "concurrently --kill-others-on-fail --names \"build-prod-server,build-prod-app\" \"npm run build-prod-server\" \"npm run build-prod-app\"",
    "build-prod-server": "cross-env NODE_ENV=production webpack-cli --config webpack.config.server.production.js && npm run build-i18n-server",
    "build-prod-app": "cross-env NODE_ENV=production webpack-cli --config webpack.config.app.production.js && npm run build-i18n-app",
    "postbuild-dev-server": "bash -c \"mkdir -p output/server; cp -af src/server/{i18n,views} output/server/\"",
    "postbuild-dev-app": "bash -c \"mkdir -p output/app; cp -af src/app/{favicon.ico,i18n,images,assets} output/app/\"",
    "postbuild-prod-server": "bash -c \"mkdir -p dist/cncjs4marlin/server; cp -af src/server/{i18n,views} dist/cncjs4marlin/server/\"",
    "postbuild-prod-app": "bash -c \"mkdir -p dist/cncjs4marlin/app; cp -af src/app/{favicon.ico,i18n,images,assets} dist/cncjs4marlin/app/\"",
    "clean": "bash -c 'rm -rf ./dist ./output'",
    "electron": "electron",
    "electron-builder": "electron-builder",
    "electron-builder:debug": "cross-env DEBUG=electron-builder electron-builder",
    "electron-rebuild": "electron-rebuild",
    "github-release": "github-release",
    "package-sync": "node scripts/package-sync.js",
    "build:macos-x64": "bash -c 'scripts/electron-builder.sh --macos --x64'",
    "build:linux-ia32": "bash -c 'scripts/electron-builder.sh --linux --ia32'",
    "build:linux-x64": "bash -c 'scripts/electron-builder.sh --linux --x64'",
    "build:linux-armv7l": "bash -c 'scripts/electron-builder.sh --linux --armv7l'",
    "build:linux-arm64": "bash -c 'scripts/electron-builder.sh --linux --arm64'",
    "build:windows-ia32": "bash -c 'scripts/electron-builder.sh --windows --ia32'",
    "build:windows-x64": "bash -c 'scripts/electron-builder.sh --windows --x64'",
    "start": "bash -c './bin/cncjs4marlin'",
    "start-electron": "electron ./dist/cncjs4marlin/main",
    "watch-dev": "cross-env NODE_ENV=development webpack-cli --watch --config webpack.config.server.development.js",
    "start-dev": "cross-env NODE_ENV=development ./bin/cncjs4marlin -vv -p 8000",
    "dev": "npm run build-dev && npm run start-dev",
    "prod": "npm run build-prod && NODE_ENV=production ./bin/cncjs4marlin",
    "eslint": "npm run eslint:build",
    "eslint:build": "eslint --fix --ext .js --ext .jsx *.js scripts test && prettier --check scripts test",
    "eslint:debug": "echo \"Checking code style...\"; DEBUG=eslint:cli-engine eslint --fix --ext .js --ext .jsx *.js src scripts test",
    "stylint": "stylint src/app",
    "prettier": "prettier --write src scripts test",
    "test": "tap test/*.js --no-timeout --node-arg=--require --node-arg=@babel/register --node-arg=--require",
    "coveralls": "tap test/*.js --coverage --coverage-report=text-lcov --nyc-arg=--require --nyc-arg=@babel/register --nyc-arg=--require | coveralls",
    "postinstall": "opencollective postinstall"
  },
  "build": {
    "appId": "cncjs4marlin",
    "asar": false,
    "asarUnpack": [],
    "productName": "CNCjs4Marlin",
    "buildDependenciesFromSource": true,
    "directories": {
      "buildResources": "electron-build",
      "output": "output",
      "app": "dist/cncjs4marlin"
    },
    "nsis": {
      "allowToChangeInstallationDirectory": true,
      "oneClick": false,
      "license": "LICENSE",
      "perMachine": true,
      "installerSidebar": "electron-build/sidebar.bmp"
    },
    "publish": {
      "provider": "github"
    },
    "mac": {
      "category": "public.app-category.productivity",
      "target": [
        "dmg"
      ],
      "icon": "electron-build/icon.icns"
    },
    "dmg": {
      "background": "electron-build/background.png",
      "icon": "electron-build/icon.icns",
      "iconSize": 80,
      "iconTextSize": 12,
      "contents": [
        {
          "x": 448,
          "y": 344,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 192,
          "y": 344,
          "type": "file"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ],
      "icon": "electron-build/icon.ico"
    },
    "linux": {
      "category": "Utility",
      "target": [
        "AppImage",
        "deb",
        "rpm"
      ]
    }
  },
  "keywords": [
    "cncjs",
    "cnc",
    "gcode",
    "marlin",
    "react",
    "arduino",
    "stm32",
    "bigtreetech",
    "socket.io"
  ],
  "dependencies": {
    "@babel/runtime": "",
    "@electron/remote": "",
    "@fortawesome/fontawesome-free": "",
    "@fortawesome/fontawesome-free-brands": "",
    "@fortawesome/free-regular-svg-icons": "",
    "@sentry/webpack-plugin": "",
    "@trendmicro/react-anchor": "",
    "@trendmicro/react-breadcrumbs": "",
    "@trendmicro/react-buttons": "",
    "@trendmicro/react-checkbox": "",
    "@trendmicro/react-datepicker": "",
    "@trendmicro/react-dropdown": "",
    "@trendmicro/react-form-control": "",
    "@trendmicro/react-grid-system": "",
    "@trendmicro/react-iframe": "",
    "@trendmicro/react-interpolate": "",
    "@trendmicro/react-loader": "",
    "@trendmicro/react-modal": "",
    "@trendmicro/react-navs": "",
    "@trendmicro/react-notifications": "",
    "@trendmicro/react-paginations": "",
    "@trendmicro/react-popover": "",
    "@trendmicro/react-portal": "",
    "@trendmicro/react-radio": "",
    "@trendmicro/react-table": "",
    "@trendmicro/react-toggle-switch": "",
    "@trendmicro/react-tooltip": "",
    "@trendmicro/react-validation": "",
    "@types/react-transition-group": "",
    "apexcharts": "",
    "avrgirl-arduino": "",
    "bcrypt-nodejs": "0.0.3",
    "body-parser": "",
    "bootstrap": "",
    "browserfs": "",
    "bufferutil": "",
    "chained-function": "",
    "chalk": "",
    "chokidar": "",
    "classnames": "",
    "cli-color": "",
    "cncjs-controller": "",
    "colornames": "",
    "commander": "",
    "compression": "",
    "connect-multiparty": "",
    "connect-restreamer": "",
    "consolidate": "",
    "convex-hull": "",
    "cookie-parser": "",
    "core-js": "^3.19.1",
    "debug": "",
    "deep-keys": "",
    "detect-browser": "",
    "downloadjs": "",
    "electron-download": "",
    "electron-ipc-log": "",
    "electron-log": "",
    "electron-store": "",
    "electron-updater": "",
    "ensure-array": "",
    "ensure-type": "",
    "errorhandler": "",
    "es5-shim": "",
    "escodegen": "",
    "esprima": "",
    "expand-tilde": "",
    "expr-eval": "",
    "express": "",
    "express-jwt": "",
    "express-session": "",
    "filereader": "",
    "final-form": "",
    "font-awesome": "",
    "force": "",
    "frac": "",
    "gamepad.js": "",
    "gcode-interpreter": "",
    "gcode-parser": "",
    "gcode-toolpath": "",
    "history": "",
    "hogan.js": "",
    "http-proxy": "",
    "hull.js": "",
    "i18next": "",
    "i18next-browser-languagedetector": "",
    "i18next-fs-backend": "",
    "i18next-http-middleware": "",
    "i18next-xhr-backend": "",
    "infinite-tree": "",
    "is-electron": "",
    "is-online": "",
    "jimp": "",
    "js-polyfills": "",
    "jsonwebtoken": "",
    "jsuri": "",
    "keycode": "",
    "lodash": "",
    "memoize-one": "",
    "method-override": "",
    "minimatch": "",
    "mkdirp": "",
    "moment": "",
    "morgan": "",
    "mousetrap": "",
    "multer": "",
    "namespace-constants": "",
    "normalize.css": "",
    "objtools": "",
    "opencollective": "",
    "perfect-scrollbar": "",
    "prop-types": "",
    "pubsub-js": "",
    "push.js": "",
    "qs": "",
    "range_check": "",
    "rc-dropdown": "",
    "rc-slider": "",
    "react": "",
    "react-beautiful-dnd": "",
    "react-bootstrap": "",
    "react-confirm-alert": "",
    "react-dom": "",
    "react-dropzone": "",
    "react-facebook-loading": "",
    "react-final-form": "",
    "react-foreach": "",
    "react-ga": "",
    "react-i18next": "",
    "react-icon-base": "",
    "react-infinite-tree": "",
    "react-recompose": "",
    "react-redux": "",
    "react-repeatable": "",
    "react-router": "",
    "react-router-dom": "",
    "react-router-redux": "",
    "react-select": "",
    "react-switch": "",
    "react-tiny-virtual-list-oss": "",
    "react-toggle": "",
    "redux": "",
    "redux-action": "",
    "redux-logger": "",
    "redux-saga": "",
    "redux-thunk": "",
    "registry-auth-token": "",
    "registry-url": "",
    "rimraf": "",
    "semver": "",
    "serve-favicon": "",
    "serve-static": "",
    "session-file-store": "",
    "sha1": "",
    "shortid": "",
    "socket.io": "",
    "socket.io-client": "",
    "socketio-jwt": "",
    "sortablejs": "",
    "spawn-default-shell": "",
    "styled-components": "",
    "superagent": "",
    "superagent-use": "",
    "three": "",
    "universal-logger": "",
    "universal-logger-browser": "",
    "use-stay-awake": "",
    "utf-8-validate": "",
    "uuid": ">=8",
    "watch": "",
    "webappengine": "",
    "winston": "",
    "worker-loader": "",
    "xterm": "",
    "xterm-addon-fit": ""
  },
  "devDependencies": {
    "@babel/cli": "",
    "@babel/core": "",
    "@babel/eslint-parser": "",
    "@babel/eslint-plugin": "^7.13.16",
    "@babel/node": "",
    "@babel/plugin-syntax-flow": "^7.12.13",
    "@babel/plugin-syntax-jsx": "^7.12.13",
    "@babel/preset-env": "",
    "@babel/preset-react": "",
    "@babel/register": "",
    "@putout/plugin-convert-commonjs-to-esm": "^5.8.0",
    "@putout/plugin-react-hooks": "^3.1.0",
    "@putout/plugin-webpack": "^1.4.0",
    "@redux-devtools/core": "",
    "@trendmicro/babel-config": "",
    "@typescript-eslint/eslint-plugin": "^4.22.0",
    "@typescript-eslint/parser": "^4.22.0",
    "babel-loader": "^8.2.3",
    "babel-plugin-lodash": "",
    "boolean": "",
    "bundle-loader": "",
    "concurrently": "",
    "coveralls": "",
    "cross-env": "",
    "css-loader": "^5.2.7",
    "css-split-webpack-plugin": "",
    "doctoc": "^2.0.0",
    "dotenv": "",
    "electron": "",
    "electron-builder": "",
    "electron-rebuild": "",
    "eslint": "",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "",
    "eslint-config-trendmicro": "",
    "eslint-find-rules": "^3.6.1",
    "eslint-import-resolver-webpack": "",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-flowtype": "^5.7.2",
    "eslint-plugin-import": "",
    "eslint-plugin-jsx-a11y": "",
    "eslint-plugin-prettier": "",
    "eslint-plugin-react": "",
    "eslint-plugin-standard": "^4.0.2",
    "eslint-plugin-unicorn": "^31.0.0",
    "eslint-plugin-vue": "^7.9.0",
    "eslint-webpack-plugin": "^2.5.4",
    "eventsource-polyfill": "",
    "file-loader": "",
    "find-imports": "",
    "github-release-cli": "",
    "glob": "",
    "html-webpack-plugin": "^4.5.2",
    "i18next-scanner": "",
    "imports-loader": "^1.2.0",
    "jest": "^26.6.3",
    "json-loader": "",
    "mini-css-extract-plugin": "^1.6.2",
    "nib": "",
    "optimize-css-assets-webpack-plugin": "",
    "pre-push": "",
    "prettier": "",
    "progress": "",
    "putout": "^22.1.0",
    "raw-loader": "",
    "react-hot-loader": "",
    "replace": "^1.2.1",
    "rimraf": "^3.0.2",
    "run-sequence": "",
    "style-loader": "^2",
    "stylint": "",
    "stylint-loader": "",
    "stylus": "",
    "stylus-loader": "^4.3.3",
    "tap": "",
    "terser-webpack-plugin": "^4.2.3",
    "text-table": "",
    "transform-loader": "",
    "typescript": "^4.2.4",
    "url-loader": "",
    "webpack": "^4.46.0",
    "webpack-cli": "",
    "webpack-dev-middleware": "",
    "webpack-dev-server": "",
    "webpack-hot-middleware": "",
    "webpack-manifest-plugin": "",
    "webpack-node-externals": "",
    "write-file-webpack-plugin": ""
  },
  "collective": {
    "type": "opencollective",
    "url": ""
  }
}
